{"version":3,"sources":["App.tsx","reportWebVitals.ts","index.tsx"],"names":["Field","emptyDay","S","C","I","L","P","M","WHITE","Box","f","color","isDone","toggle","borderColor","bgColor","textColor","onClick","className","App","useState","dayjs","format","currentDay","setCurrentDay","data","setData","useEffect","loadCurrentDayData","a","Storage","get","key","retrievedData","value","JSON","parse","saveCurrentDayData","set","stringify","subtract","add","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d4ea8875.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport dayjs from \"dayjs\";\nimport { Storage } from \"@capacitor/storage\";\n\nenum Field {\n  Sports = \"S\",\n  Cinema = \"C\",\n  Computer = \"I\",\n  Languages = \"L\",\n  Philosophy = \"P\",\n  Meditation = \"M\",\n}\n\ntype S = \"S\" | \"Sports\";\ntype C = \"C\" | \"Cinema\";\ntype I = \"I\" | \"Computer\";\ntype L = \"L\" | \"Languages\";\ntype P = \"P\" | \"Philosophy\";\ntype M = \"M\" | \"Mediatation\";\n\ntype F = S | P | C | I | L | M;\n\ntype Day = {\n  S: boolean;\n  C: boolean;\n  I: boolean;\n  L: boolean;\n  P: boolean;\n  M: boolean;\n};\n\nconst emptyDay = {\n  S: false,\n  C: false,\n  I: false,\n  L: false,\n  P: false,\n  M: false,\n};\n\nconst BLACK = \"black\";\nconst WHITE = \"white\";\nconst ORANGE = \"yellow-700\";\nconst PURPLE = \"purple-600\";\nconst BLUE = \"blue-400\";\nconst YELLOW = \"yellow-400\";\nconst GREEN = \"green-800\";\nconst PINK = \"pink-500\";\ninterface BoxProp {\n  f: F;\n  color: string;\n  isDone: boolean;\n  toggle: () => void;\n}\n\nconst Box: React.FC<BoxProp> = ({ f, color, isDone, toggle }) => {\n  const borderColor = `border-${isDone ? color : BLACK}`;\n  const bgColor = `bg-${isDone ? color : WHITE}`;\n  const textColor = `text-${isDone ? WHITE : color}`;\n  return (\n    <button\n      onClick={toggle}\n      className={`md:w-16 w-8 md:h-16 h-8 mx-2 box-border border-4 ${borderColor} ${bgColor} rounded-lg font-bold ${textColor}`}\n    >\n      {f}\n    </button>\n  );\n};\n\nconst App = () => {\n  const [currentDay, setCurrentDay] = useState<string>(\n    dayjs().format(\"YYYY-MM-DD\")\n  );\n  const [data, setData] = useState<Day>(emptyDay);\n\n  useEffect(() => {\n    const loadCurrentDayData = async () => {\n      const retrievedData = await Storage.get({ key: currentDay });\n      if (retrievedData.value != null) {\n        setData(JSON.parse(retrievedData.value));\n      } else {\n        setData(emptyDay);\n      }\n    };\n\n    loadCurrentDayData();\n  }, [currentDay]);\n\n  useEffect(() => {\n    const saveCurrentDayData = async () => {\n      await Storage.set({ key: currentDay, value: JSON.stringify(data) });\n    };\n\n    saveCurrentDayData();\n  }, [data]);\n\n  return (\n    <div className=\"mt-12 w-full flex justify-center items-center\">\n      <div className=\"flex flex-col items-center\">\n        <div className=\"w-full flex justify-evenly\">\n          <div>{dayjs(currentDay).format(\"D-MM-YYYY, dddd\")}</div>\n          <button onClick={() => setCurrentDay(dayjs().format(\"YYYY-MM-DD\"))}>\n            Today\n          </button>\n        </div>\n\n        <div className=\"pt-8 flex justify-evenly\">\n          <button\n            className=\"pr-4 font-bold\"\n            onClick={() =>\n              setCurrentDay(\n                dayjs(currentDay).subtract(1, \"day\").format(\"YYYY-MM-DD\")\n              )\n            }\n          >\n            {\"<\"}\n          </button>\n          <Box\n            f=\"S\"\n            color={ORANGE}\n            isDone={data.S}\n            toggle={() => setData({ ...data, S: !data.S })}\n          />\n          <Box\n            f=\"C\"\n            color={PURPLE}\n            isDone={data.C}\n            toggle={() => setData({ ...data, C: !data.C })}\n          />\n          <Box\n            f=\"I\"\n            color={BLUE}\n            isDone={data.I}\n            toggle={() => setData({ ...data, I: !data.I })}\n          />\n          <Box\n            f=\"L\"\n            color={YELLOW}\n            isDone={data.L}\n            toggle={() => setData({ ...data, L: !data.L })}\n          />\n          <Box\n            f=\"P\"\n            color={GREEN}\n            isDone={data.P}\n            toggle={() => setData({ ...data, P: !data.P })}\n          />\n          <Box\n            f=\"M\"\n            color={PINK}\n            isDone={data.M}\n            toggle={() => setData({ ...data, M: !data.M })}\n          />\n          <button\n            className=\"pl-4 font-bold\"\n            onClick={() =>\n              setCurrentDay(\n                dayjs(currentDay).add(1, \"day\").format(\"YYYY-MM-DD\")\n              )\n            }\n          >\n            {\">\"}\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}